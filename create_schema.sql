-- Create the Movie table
CREATE TABLE IF NOT EXISTS Movie(
	MID INTEGER PRIMARY KEY,
	Name CHAR(50) NOT NULL,
	ReleaseDT DATE,
	Length INTEGER CHECK(Length >= 0),
	DirectorCID INTEGER NOT NULL,
	ImageLink CHAR(100),
	Overview CHAR(1000),
	FOREIGN KEY(DirectorCID) REFERENCES Contributor(CID) ON DELETE CASCADE);

-- Create the Contributor table
CREATE TABLE IF NOT EXISTS Contributor(
	CID INTEGER PRIMARY KEY,
	Name CHAR(50) NOT NULL,
	DoB DATE,
	Gender INTEGER NOT NULL,
	Bio CHAR(1000));

-- Create Review table, do we really want to cascade delete?
CREATE TABLE IF NOT EXISTS Review(
	RID INTEGER PRIMARY KEY,
	Author CHAR(50),
	Content CHAR(1000),
	MID INTEGER,
	FOREIGN KEY(MID) REFERENCES Movie(MID) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS Acted(
	MID INTEGER,
	ActorID INTEGER,
	PRIMARY KEY (MID, ActorID),
	FOREIGN KEY(MID) REFERENCES Movie(MID) ON DELETE CASCADE,
	FOREIGN KEY(ActorID) REFERENCES Contributor(CID) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS Release_Date(
	MID INTEGER,
	Country CHAR(5),
	Certification CHAR(10),
	ReleaseDT DATE NULL,
	PRIMARY KEY (MID, Country),
	FOREIGN KEY(MID) REFERENCES Movie(MID) ON DELETE CASCADE);

CREATE INDEX IF NOT EXISTS IDX_CONT_NAME ON Contributor(Name);
CREATE INDEX IF NOT EXISTS IDX_MOV_DIR ON Movie(DirectorCID);
CREATE INDEX IF NOT EXISTS IDX_ACTED_ACTORID ON Acted(ActorID);

PRAGMA foreign_keys = ON;
